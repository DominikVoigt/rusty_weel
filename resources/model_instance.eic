weel.call(
    "a1",
    "bookAir",
    HTTPRequest {
        label: "Book Airline 1",
        method: HTTP::POST,
        arguments: Some(vec![
            new_key_value_pair("from", "data.from"),
            new_key_value_pair("from", "data.to"),
            new_key_value_pair("persons", "data.persons"),
        ]),
    },
    Option::None,
    Option::None,
    Some(indoc! {r###"
        data.airlone = result.value(\'id')
        data.costs += result.value('costs').to_f
        status.update 1, 'Hotel'
    "###}),
    Option::None,
);
weel.parallel_do(Option::None, "last", || {
    weel.loop_exec(weel.pre_test("data.persons > 0"), || {
        weel.parallel_branch(data, || {
            weel.call(
                "a2",
                "bookHotel",
                HTTPRequest {
                    label: "Book Hotel",
                    method: HTTP::POST,
                    arguments: Some(vec![new_key_value_pair("to", "data.to")]),
                },
                Option::None,
                Option::None,
                Some(indoc! {r###"
                        data.hotels << result.value('id')
                        data.costs += result.value('costs').to_f
                    "###}),
                Option::None,
            );
        });
        weel.manipulate(
            "a3",
            Option::None,
            indoc! {r###"
            data.persons -= 1
        "###},
        )
    })
});
weel.choose("exclusive", || {
    weel.alternative("data.costs > 700", || {
        weel.call(
            "a4",
            "approve",
            HTTPRequest {
                label: "Approve Hotel",
                method: HTTP::POST,
                arguments: Some(vec![new_key_value_pair("costs", "data.costs")]),
            },
            Option::None,
            Option::None,
            Option::None,
            Option::None,
        );
    })
});